import java.util.Queue;
import java.util.LinkedList;

//Functions needed to decode text files to byte array.
public class DecompTree {
	Value top;
	
	public void Decomp(char[] chars) {
		int fillerBits = (int)(chars[0]);
		int compLayer = (int)(chars[1]);
		
		// Reassemble frequency tree.
		Queue<Value> queue = new LinkedList<Value>();
		int cursor = 2;
		top = new Value(chars[cursor]+"");
		queue.add(top);
		
		while(queue.size() != 0) {
			Value val = queue.poll();
			if(val.key.charAt(0) == 0) {
				Value newVal = new Value(chars[cursor]+"");
				newVal.child1 = new Value(chars[++cursor]+"");
				if(chars[cursor] == 0) {
					queue.add(newVal.child1);
				}
				newVal.child2 = new Value(chars[++cursor]+"");
				if(chars[cursor] == 0) {
					queue.add(newVal.child2);
				}
			}
		}
	}
}
